#!/bin/sh

_copyright(){ echo "
  ozh lightweight shell extensions
  2008-2016 - anx @ ulzq de (Sebastian Glaser)
  2008-2016 - fly @ ulzq de
  Licensed under GNU GPL v3"; }
_license(){ echo "
  ozh is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2, or (at your option)
  any later version.

  ozh is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this software; see the file COPYING.  If not, write to
  the Free Software Foundation, Inc., 59 Temple Place, Suite 330,
  Boston, MA 02111-1307 USA

  http://www.gnu.org/licenses/gpl.html"; }

[ -n "$OZH_HELP" ] && {
  _say_host_help(){ echo "[1:host] utter the hostname and a sound indicating wether its up"; }; }

playon() { pv "$2" | ssh -C "$1" 'DISPLAY=:0 vlc --fullscreen -'; }

splay(){ ogg123 -q $1; }
up_sound(){ echo "/usr/share/sounds/ubuntu/stereo/button-toggle-on.ogg" ;}
down_sound(){ echo "/usr/share/sounds/ubuntu/stereo/dialog-error.ogg" ;}
dspeak(){ espeak $@ > /dev/null 2>&1; }

say_time(){  dspeak "The Time is `date +%I:%M%p`"; }

sbeep(){
  app_exists sox || app_depend sox
  if [ -z $1 ]; then f=880; else f=$1; fi
  sox -e mu-law -r 8000 -n -t sox - synth 0.5 sine $f gain -3 | play -t sox - > /dev/null 2>&1; }

say_host(){ 
  HOST=$1
  if ping -c1 -w30 $HOST>/dev/null; then 
    dspeak $HOST
    splay "$(up_sound)"
  else  
    dspeak $HOST
    splay "$(down_sound)"
  fi; }

beeping(){
    beepup(){ beep -f 440; beep -f 880; beep -f 440; beep -f 880; beep -f 440; beep -f 880; }
    beepdn(){ beep -f 220; beep -f 440; beep -f 220; beep -f 440; beep -f 220; beep -f 440; }
    wait_up(){ while ! ping -c1 -w1 8.8.8.8 2>&1 | busybox grep -q 'bytes from'; do echo $?; sleep 1;done; beepup; mode=wait_dn; }
    wait_dn(){ while ping -c1 -w1 8.8.8.8 2>&1 | busybox grep -q 'bytes from'; do echo $?;sleep 1;done; beepdn; mode=wait_up; }
    mode='wait_up'; while { echo $mode; }; do $mode;done; }

sonar(){ echo "\
T2dnUwACAAAAAAAAAAAAAAAAAAAAADQzjoYBHgF2b3JiaXMAAAAAAkSsAAAAAAAAAAAAAAAAAAC7
AU9nZ1MAAAAAAAAAAAAAAAAAAAEAAABIfUORARADdm9yYmlzAAAAAAAAAAABT2dnUwAAAAAAAAAA
AAAAAAAAAgAAAHbh+/0N////////////////tgV2b3JiaXMcQkNWAgAQAACEdJpZqgEizECGgdCQ
lQAAAgAAYIQiDDEgNGQlAAAQAAAghpKDaEJrzjfnOGiWg6ZSbE4HJ1JtnuSmYm7OOeecc7I5Z4xz
zjmnKGcWg2ZCa845JzFoloJmQmvOOedJbB60pkprzjlnnHM6GGeEcc45p0lrHqRmY23OOWdBa5qj
5lJszjknUm6e1OZSbc4555xzzjnnnHPOOad6cToH54Rzzjknam+u5SZ0cc4555NxujcnhHPOOeec
c84555xzzjknCA1ZCQAAAQAQhGFjGHcKgvQ5GohRhJiGTHrQPTpMgsYgp5B6NDoaKaUOQkllnJTS
CUJDVgIAgAAAEEJIIYUUUkghhRRSSCGFGGKIIYaccsopqKCSSiqqKKPMMssss8wyyyyzDjvrrMMO
QwwxxNBKK7HUVFuNNdaae8655iCtldZaa62UUkoppZSC0JCVAAAIAACBkEEGGWQUUkghhRhiyimn
nIIKKiA0ZCUAAAYAwCFnoIEGGmiggQYaaKBxxhmIIIIIIqikkkw6Cim12GrMMddegw46955777n4
HIRSSimllFJKKaWUUkopJQgNWQkAgAAAAAghhBBSSCGFFFKKMcYccw46CSUEQkNWAgBgAAAMMcQY
ZJBBSCGFGGKKKccccww6CCGUUlJooYVcaoglllZaiaWlmGqLsdZYc+0x1t5777333nvvvffee86B
0JCVAEAEAACDDCKIIIKMMQYhBISGrAQAQAAAEGKIMcYghBBSiCGnnIJMMumko5ACoSErAQAnAACE
EUckcQQSZ6CBCCqpIKPMQiyxtdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmstEBqyEgCIAABg
kEEGGUQQQQQZZIDQkJUAAAgAACOMQAQZpRRjjjnmGHTQQScdhRZaIDRkJQDgBABAIKGIMswwBBFV
VFFGFVUUUkcppZRSSimllFJKKaWUUkoppZRSSimllFJKKaVUSimlBEJDVgIAZAAAkKKUUiktRYIi
pRikGEtGFXNQWoqocgxSzalSziDmJJaIMYSUk1Qy5hRCDELqHHVMKQYtlRhCxhik2HJLoXMOCA1Z
IQCEZgA4HAeQLAuQLAsAAAAAAAAAJE0DNM8DLM0DAAAAAAAAAEnTAMvTAM3zAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQ
NA3QPA/QPA8AAAAAAAAANM8DPE8EPFEEAAAAAAAAAMvzAE30AE8UAQAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQNA3QPA/Q
PA8AAAAAAAAALM8DPFEENE8EAAAAAAAAAMvzAE8UAU/0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
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" |
  base64 -d | sudo -u $AUSER ogg123 - 2>&1 > /dev/null; } 

s0nard(){ 
  AUSER=`whoami`;if [ ! -n "$2" ]; then AUSER=$AUSER
  else AUSER=$2;fi;echo "s0nard: $1 ($AUSER)"

  if [[ "$1" == "start" ]];then
    s0nard real $AUSER  2>&1 > /dev/null &
    exit

  elif [[ "$1" == "stop" ]];then
    kill `ps aux|busybox awk '/s0nard\ real/{print $2}'`
    exit

  elif [[ "$1" == "restart" ]];then
    kill `ps aux|busybox awk '/s0nard\ real/{print $2}'`
    s0nard real $AUSER 2>&1 > /dev/null &
    exit

  elif [[ "$1" == "real" ]];then
    echo daemonizing

  else 
    echo "Usage: s0nard start USER | stop | restart"
    exit
  fi

  if iptables -L INPUT | busybox grep -q "icmp echo-request LOG level warning"; then
    echo "sonard: iptables rule arleady set" >> /var/log/syslog
  else
    iptables -A INPUT -p icmp --icmp-type echo-request -j LOG
  fi

  while ( true ); do
    tail -f -n0 /var/log/syslog | busybox grep -q PROTO=ICMP && sonar;
  done; }
